{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\spot_the_plane\\\\src\\\\pages\\\\MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Loader from \"../components/Loader\";\nimport Navbar from \"../components/Navbar\";\nimport Game from \"../components/Game\";\nimport Pregame from '../components/Pregame';\nimport Postgame from '../components/Postgame'; // import Info from './info.js';\n// import Stats from './stats.js';\n// import Results from './results.js';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction compDay() {\n  let today = new Date();\n  let yyyy = today.getFullYear();\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let dd = String(today.getDate()).padStart(2, '0');\n  return parseInt(`${yyyy}${mm}${dd}`);\n}\n\nconst notify = msg => toast(msg);\n\nexport default function MainPage() {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const [animation, setAnimation] = useState();\n  const [begun, setBegun] = useState(false);\n  const [done, setDone] = useState(false);\n  const [day, setDay] = useState();\n  const [data, setData] = useState();\n  const [completionTime, setTime] = useState(0);\n  const [rgb, setRGB] = useState();\n  useEffect(() => {\n    // let gameState = JSON.parse(localStorage.getItem('gameState'));\n    // let statistics = JSON.parse(localStorage.getItem('statistics'));\n    fetch(\"/api/game\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        seed: compDay()\n      })\n    }).then(res => res.json()).then(data => {\n      setDay(data.day);\n      setData(data.data);\n      setLoaded(true);\n    });\n  }, []);\n\n  const startGame = () => {\n    setBegun(true);\n  };\n\n  const endGame = (t, rgb) => {\n    setTime(t);\n    setRGB(rgb);\n    setDone(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), loaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!begun && /*#__PURE__*/_jsxDEV(Pregame, {\n        startGame: startGame,\n        animation: animation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 32\n      }, this), begun && !done && /*#__PURE__*/_jsxDEV(Game, {\n        data: data,\n        endGame: endGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 40\n      }, this), done && /*#__PURE__*/_jsxDEV(Postgame, {\n        completionTime: completionTime,\n        rgb: rgb,\n        day: day,\n        notify: notify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MainPage, \"5dkfr5WLEjrXOCyrEg/4+NRelmQ=\");\n\n_c = MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","toast","Toaster","Loader","Navbar","Game","Pregame","Postgame","compDay","today","Date","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","parseInt","notify","msg","MainPage","loaded","setLoaded","animation","setAnimation","begun","setBegun","done","setDone","day","setDay","data","setData","completionTime","setTime","rgb","setRGB","fetch","method","headers","body","JSON","stringify","seed","then","res","json","startGame","endGame","t"],"sources":["D:/Coding/spot_the_plane/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport Loader from \"../components/Loader\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Game from \"../components/Game\";\r\nimport Pregame from '../components/Pregame';\r\nimport Postgame from '../components/Postgame';\r\n// import Info from './info.js';\r\n// import Stats from './stats.js';\r\n// import Results from './results.js';\r\n\r\nfunction compDay() {\r\n    let today = new Date();\r\n    let yyyy = today.getFullYear();\r\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    let dd = String(today.getDate()).padStart(2, '0');\r\n    return parseInt(`${yyyy}${mm}${dd}`);\r\n}\r\n\r\nconst notify = (msg) => toast(msg);\r\n\r\nexport default function MainPage() {\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [animation, setAnimation] = useState();\r\n    const [begun, setBegun] = useState(false);\r\n    const [done, setDone] = useState(false);\r\n    const [day, setDay] = useState();\r\n    const [data, setData] = useState();\r\n    const [completionTime, setTime] = useState(0);\r\n    const [rgb, setRGB] = useState();\r\n\r\n    useEffect(() => {\r\n        // let gameState = JSON.parse(localStorage.getItem('gameState'));\r\n        // let statistics = JSON.parse(localStorage.getItem('statistics'));\r\n        fetch(\"/api/game\", {\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ seed: compDay() })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setDay(data.day);\r\n            setData(data.data);\r\n            setLoaded(true);\r\n        })\r\n    }, []);\r\n\r\n    const startGame = () => {\r\n        setBegun(true);\r\n    }\r\n\r\n    const endGame = (t, rgb) => {\r\n        setTime(t);\r\n        setRGB(rgb);\r\n        setDone(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Toaster />\r\n            {loaded ? \r\n                <>\r\n                    {!begun && <Pregame startGame={startGame} animation={animation} />}\r\n                    {begun && !done && <Game data={data} endGame={endGame} />}\r\n                    {done && <Postgame completionTime={completionTime} rgb={rgb} day={day} notify={notify} />}\r\n                </>\r\n            :\r\n                <Loader />\r\n            }\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}