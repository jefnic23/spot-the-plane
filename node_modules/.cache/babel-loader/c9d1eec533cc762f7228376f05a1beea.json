{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\spot_the_plane\\\\src\\\\pages\\\\MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Loader from \"../components/Loader\";\nimport Navbar from \"../components/Navbar\";\nimport Game from \"../components/Game\";\nimport Pregame from '../components/Pregame';\nimport Postgame from '../components/Postgame';\nimport Info from '../components/Info';\nimport Stats from '../components/Stats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction compDay() {\n  let today = new Date();\n  let yyyy = today.getFullYear();\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let dd = String(today.getDate()).padStart(2, '0');\n  return parseInt(`${yyyy}${mm}${dd}`);\n}\n\nconst notify = msg => toast(msg);\n\nexport default function MainPage() {\n  _s();\n\n  // const [gameState, setGameState] = useState(\n  //     localStorage.getItem('game_state') ? \n  //     JSON.parse(localStorage.getItem('game_state')) : \n  //     {'completionTime': '', 'answers': [], 'status': 'in_progress', 'rgb': []}\n  // );\n  // const [statistics, setStatistics] = useState(\n  //     localStorage.getItem('statistics') ?\n  //     JSON.parse(localStorage.getItem('statistics')) :\n  //     {'daysPlayed': 0, 'totalGameTime': 0, 'avgCompletionTime': 0, 'avgTimePerQuestion': 0, 'lastPlayed': 'Never'}\n  // );\n  const [loaded, setLoaded] = useState(false);\n  const [animation, setAnimation] = useState('animate__fadeIn');\n  const [menuAnimation, setMenuAnimation] = useState();\n  const [info, setInfo] = useState(false);\n  const [stats, setStats] = useState(false);\n  const [begun, setBegun] = useState(false);\n  const [done, setDone] = useState(false);\n  const [day, setDay] = useState();\n  const [data, setData] = useState();\n  const [completionTime, setTime] = useState(0);\n  const [rgb, setRGB] = useState();\n  useEffect(() => {\n    let gameState = localStorage.getItem('game_state') ? JSON.parse(localStorage.getItem('game_state')) : {\n      'completionTime': '',\n      'answers': [],\n      'status': 'in_progress',\n      'rgb': []\n    };\n    let statistics = localStorage.getItem('statistics') ? JSON.parse(localStorage.getItem('statistics')) : {\n      'daysPlayed': 0,\n      'totalGameTime': 0,\n      'avgCompletionTime': 0,\n      'avgTimePerQuestion': 0,\n      'lastPlayed': 'Never'\n    };\n\n    if (!gameState || gameState.status === 'in_progress' || compDay() > statistics.lastPlayed) {\n      fetch(\"/api/game\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          seed: compDay()\n        })\n      }).then(res => res.json()).then(data => {\n        setDay(data.day);\n        setData(data.data);\n        setLoaded(true);\n      });\n    } else {\n      setDay(statistics.lastPlayed);\n      setTime(gameState.completionTime);\n      setRGB(gameState.rgb);\n      setBegun(true);\n      setLoaded(true);\n      setDone(true);\n    }\n\n    localStorage.setItem('game_state', JSON.stringify(gameState));\n    localStorage.setItem('statistics', JSON.stringify(statistics));\n  }, []);\n\n  const startGame = () => {\n    setAnimation('animate__fadeOut');\n    setTimeout(() => {\n      setAnimation('animate__fadeIn');\n      setBegun(true);\n    }, 500);\n  };\n\n  const endGame = (t, rgb) => {\n    // console.log(gameState, statistics);\n    setTime(t);\n    setRGB(rgb);\n    setDone(true);\n  };\n\n  const openMenu = m => {\n    setMenuAnimation('animate__fadeInUpBig');\n    m === 'info' ? setInfo(true) : setStats(true);\n  };\n\n  const closeMenu = m => {\n    setMenuAnimation('animate__fadeOutDownBig');\n    setTimeout(() => {\n      m === 'info' ? setInfo(false) : setStats(false);\n    }, 500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      openMenu: openMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), info && /*#__PURE__*/_jsxDEV(Info, {\n      animation: menuAnimation,\n      closeMenu: closeMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 22\n    }, this), stats && /*#__PURE__*/_jsxDEV(Stats, {\n      animation: menuAnimation,\n      closeMenu: closeMenu,\n      statistics: statistics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }, this), loaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!begun && /*#__PURE__*/_jsxDEV(Pregame, {\n        startGame: startGame,\n        animation: animation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 32\n      }, this), begun && !done && /*#__PURE__*/_jsxDEV(Game, {\n        data: data,\n        endGame: endGame,\n        animation: animation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 40\n      }, this), done && /*#__PURE__*/_jsxDEV(Postgame, {\n        completionTime: completionTime,\n        rgb: rgb,\n        day: day,\n        notify: notify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MainPage, \"Gz3OIYxqmtvg6On6sRImtRoJC3w=\");\n\n_c = MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","toast","Toaster","Loader","Navbar","Game","Pregame","Postgame","Info","Stats","compDay","today","Date","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","parseInt","notify","msg","MainPage","loaded","setLoaded","animation","setAnimation","menuAnimation","setMenuAnimation","info","setInfo","stats","setStats","begun","setBegun","done","setDone","day","setDay","data","setData","completionTime","setTime","rgb","setRGB","gameState","localStorage","getItem","JSON","parse","statistics","status","lastPlayed","fetch","method","headers","body","stringify","seed","then","res","json","setItem","startGame","setTimeout","endGame","t","openMenu","m","closeMenu"],"sources":["D:/Coding/spot_the_plane/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport Loader from \"../components/Loader\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Game from \"../components/Game\";\r\nimport Pregame from '../components/Pregame';\r\nimport Postgame from '../components/Postgame';\r\nimport Info from '../components/Info';\r\nimport Stats from '../components/Stats';\r\n\r\nfunction compDay() {\r\n    let today = new Date();\r\n    let yyyy = today.getFullYear();\r\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    let dd = String(today.getDate()).padStart(2, '0');\r\n    return parseInt(`${yyyy}${mm}${dd}`);\r\n}\r\n\r\nconst notify = (msg) => toast(msg);\r\n\r\nexport default function MainPage() {\r\n    // const [gameState, setGameState] = useState(\r\n    //     localStorage.getItem('game_state') ? \r\n    //     JSON.parse(localStorage.getItem('game_state')) : \r\n    //     {'completionTime': '', 'answers': [], 'status': 'in_progress', 'rgb': []}\r\n    // );\r\n    // const [statistics, setStatistics] = useState(\r\n    //     localStorage.getItem('statistics') ?\r\n    //     JSON.parse(localStorage.getItem('statistics')) :\r\n    //     {'daysPlayed': 0, 'totalGameTime': 0, 'avgCompletionTime': 0, 'avgTimePerQuestion': 0, 'lastPlayed': 'Never'}\r\n    // );\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [animation, setAnimation] = useState('animate__fadeIn');\r\n    const [menuAnimation, setMenuAnimation] = useState();\r\n    const [info, setInfo] = useState(false);\r\n    const [stats, setStats] = useState(false);\r\n    const [begun, setBegun] = useState(false);\r\n    const [done, setDone] = useState(false);\r\n    const [day, setDay] = useState();\r\n    const [data, setData] = useState();\r\n    const [completionTime, setTime] = useState(0);\r\n    const [rgb, setRGB] = useState();\r\n\r\n    useEffect(() => {\r\n        let gameState = localStorage.getItem('game_state') ? \r\n            JSON.parse(localStorage.getItem('game_state')) : \r\n            {'completionTime': '', 'answers': [], 'status': 'in_progress', 'rgb': []}\r\n        ;\r\n        let statistics = localStorage.getItem('statistics') ?\r\n            JSON.parse(localStorage.getItem('statistics')) :\r\n            {'daysPlayed': 0, 'totalGameTime': 0, 'avgCompletionTime': 0, 'avgTimePerQuestion': 0, 'lastPlayed': 'Never'}\r\n        ;\r\n        if (!gameState || gameState.status === 'in_progress' || compDay() > statistics.lastPlayed) {\r\n            fetch(\"/api/game\", {\r\n                method: \"POST\",\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ seed: compDay() })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setDay(data.day);\r\n                setData(data.data);\r\n                setLoaded(true);\r\n            });\r\n        } else {\r\n            setDay(statistics.lastPlayed);\r\n            setTime(gameState.completionTime);\r\n            setRGB(gameState.rgb);\r\n            setBegun(true);\r\n            setLoaded(true);\r\n            setDone(true);\r\n        }\r\n        localStorage.setItem('game_state', JSON.stringify(gameState));\r\n        localStorage.setItem('statistics', JSON.stringify(statistics));\r\n    }, []);\r\n\r\n    const startGame = () => {\r\n        setAnimation('animate__fadeOut');\r\n        setTimeout(() => {\r\n            setAnimation('animate__fadeIn');\r\n            setBegun(true);\r\n        }, 500);\r\n    }\r\n\r\n    const endGame = (t, rgb) => {\r\n        // console.log(gameState, statistics);\r\n        setTime(t);\r\n        setRGB(rgb);\r\n        setDone(true);\r\n    };\r\n\r\n    const openMenu = (m) => {\r\n        setMenuAnimation('animate__fadeInUpBig');\r\n        m === 'info' ? setInfo(true) : setStats(true);\r\n    }\r\n\r\n    const closeMenu = (m) => {\r\n        setMenuAnimation('animate__fadeOutDownBig');\r\n        setTimeout(() => {\r\n            m === 'info' ? setInfo(false) : setStats(false);\r\n        }, 500);\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <Navbar openMenu={openMenu} />\r\n            {info && <Info animation={menuAnimation} closeMenu={closeMenu} />}\r\n            {stats && <Stats animation={menuAnimation} closeMenu={closeMenu} statistics={statistics} />}\r\n            {loaded ? \r\n                <>\r\n                    {!begun && <Pregame startGame={startGame} animation={animation} />}\r\n                    {begun && !done && <Game data={data} endGame={endGame} animation={animation} />}\r\n                    {done && <Postgame completionTime={completionTime} rgb={rgb} day={day} notify={notify} />}\r\n                </>\r\n            :\r\n                <Loader />\r\n            }\r\n            <Toaster />\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}