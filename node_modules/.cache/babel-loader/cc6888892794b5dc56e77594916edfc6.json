{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\spot_the_plane\\\\src\\\\components\\\\Stats.js\";\nimport styles from '../styles/Stats.module.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getTimeFromMs(t) {\n  let mm = parseInt(t / (1000 * 60) % 60);\n  let ss = parseInt(t / 1000 % 60);\n  let ms = parseInt(t % 1000 / 10);\n  let leadZeroTime = [mm, ss, ms].map(time => time < 10 ? `0${time}` : time);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [leadZeroTime[0], \":\", leadZeroTime[1], \".\", leadZeroTime[2]]\n  }, void 0, true);\n}\n\nfunction getDay(da) {\n  let d = da.toString().split('');\n  let m = d.slice(4, 6);\n  let a = d.slice(6);\n  let y = d.slice(0, 4);\n  return `${m.join('')}/${a.join('')}/${y.join('')}`;\n}\n\nexport default function Stats(_ref) {\n  let {\n    animation,\n    closeMenu,\n    statistics\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `share_overlay animate__animated ${animation} animate__faster`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close icon\",\n      onClick: () => closeMenu('stats'),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"#fff\",\n        strokeWidth: \"2\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"18\",\n          y1: \"6\",\n          x2: \"6\",\n          y2: \"18\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 187\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"6\",\n          y1: \"6\",\n          x2: \"18\",\n          y2: \"18\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 230\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.stat_container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.avg_container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.avg_item,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Average completion time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: getTimeFromMs(statistics.avgCompletionTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.avg_item,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Average question time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: getTimeFromMs(statistics.avgTimePerQuestion)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.avg_item,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Days played\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: statistics.daysPlayed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.avg_item,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Last played\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: getDay(statistics.lastPlayed)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_c = Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["styles","getTimeFromMs","t","mm","parseInt","ss","ms","leadZeroTime","map","time","getDay","da","d","toString","split","m","slice","a","y","join","Stats","animation","closeMenu","statistics","stat_container","avg_container","avg_item","avgCompletionTime","avgTimePerQuestion","daysPlayed","lastPlayed"],"sources":["D:/Coding/spot_the_plane/src/components/Stats.js"],"sourcesContent":["import styles from '../styles/Stats.module.css';\r\n\r\nfunction getTimeFromMs(t) {\r\n    let mm = parseInt((t / (1000 * 60)) % 60);\r\n    let ss = parseInt((t / 1000) % 60);\r\n    let ms = parseInt((t % 1000) / 10);\r\n    let leadZeroTime = [mm, ss, ms].map(time => time < 10 ? `0${time}` : time);\r\n    return <>{leadZeroTime[0]}:{leadZeroTime[1]}.{leadZeroTime[2]}</>;\r\n}\r\n\r\nfunction getDay(da) {\r\n    let d = da.toString().split('');\r\n    let m = d.slice(4,6);\r\n    let a = d.slice(6);\r\n    let y = d.slice(0,4);\r\n    return `${m.join('')}/${a.join('')}/${y.join('')}`;\r\n}\r\n\r\nexport default function Stats({ animation, closeMenu, statistics }) {\r\n    return (\r\n        <div className={`share_overlay animate__animated ${animation} animate__faster`}>\r\n            <button className=\"close icon\" onClick={() => closeMenu('stats')}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#fff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\r\n            </button>\r\n            <div className={styles.stat_container}>\r\n                <h1>Statistics</h1>\r\n                <div className={styles.avg_container}>\r\n                    <div className={styles.avg_item}>\r\n                        <p>Average completion time</p>\r\n                        <span>{ getTimeFromMs(statistics.avgCompletionTime) }</span>\r\n                    </div>\r\n                    <div className={styles.avg_item}>\r\n                        <p>Average question time</p>\r\n                        <span>{ getTimeFromMs(statistics.avgTimePerQuestion) }</span>\r\n                    </div>\r\n                    <div className={styles.avg_item}>\r\n                        <p>Days played</p>\r\n                        <span>{ statistics.daysPlayed }</span>\r\n                    </div>\r\n                    <div className={styles.avg_item}>\r\n                        <p>Last played</p>\r\n                        <span>{ getDay(statistics.lastPlayed) }</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}