{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\spot_the_plane\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Counter(_ref) {\n  _s();\n\n  let {\n    id,\n    index,\n    incCounter,\n    decCounter,\n    stopCount,\n    colors,\n    getMiniPlaneColors\n  } = _ref;\n  const [used, setUsed] = useState(false);\n  const [red, setRed] = useState(0);\n  const [green, setGreen] = useState(255);\n  const [blue, setBlue] = useState(255);\n  const [opacity, setOpacity] = useState(0.21);\n  useEffect(() => {\n    if (id === index) {\n      let interval;\n\n      if (!stopCount) {\n        setUsed(true);\n        setBlue(0);\n        setOpacity(1);\n        interval = setInterval(() => {\n          if (red === 255) {\n            clearInterval(interval);\n          } else {\n            setGreen(g => incCounter ? g - 75 : g - 1);\n            setRed(r => incCounter ? r + 75 : r + 1);\n            decCounter();\n          }\n        }, 100);\n      }\n\n      if (colors) {\n        getMiniPlaneColors([red, green, blue]);\n      }\n\n      return () => clearInterval(interval);\n    }\n  }, [id, index, red, green, blue, incCounter, decCounter, stopCount, colors, getMiniPlaneColors]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"miniplane\",\n    style: {\n      backgroundColor: `rgba(${used ? red : 255}, ${green}, ${blue}, ${opacity})`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Counter, \"eUdXjV36Wu1BUHJLV3vXcAVU908=\");\n\n_c = Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useState","useEffect","Counter","id","index","incCounter","decCounter","stopCount","colors","getMiniPlaneColors","used","setUsed","red","setRed","green","setGreen","blue","setBlue","opacity","setOpacity","interval","setInterval","clearInterval","g","r","backgroundColor"],"sources":["D:/Coding/spot_the_plane/src/components/Counter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function Counter({ id, index, incCounter, decCounter, stopCount, colors, getMiniPlaneColors }) {\r\n    const [used, setUsed] = useState(false);\r\n    const [red, setRed] = useState(0);\r\n    const [green, setGreen] = useState(255);\r\n    const [blue, setBlue] = useState(255);\r\n    const [opacity, setOpacity] = useState(0.21);\r\n\r\n    useEffect(() => {\r\n        if (id === index) {\r\n            let interval;\r\n            if (!stopCount) {\r\n                setUsed(true);\r\n                setBlue(0);\r\n                setOpacity(1);\r\n                interval = setInterval(() => {\r\n                    if (red === 255 ) {\r\n                        clearInterval(interval);\r\n                    } else {\r\n                        setGreen((g) => incCounter ? g - 75 : g - 1);\r\n                        setRed((r) => incCounter ? r + 75 : r + 1);\r\n                        decCounter();\r\n                    }\r\n                }, 100);\r\n            }\r\n            if (colors) {\r\n                getMiniPlaneColors([red, green, blue]);\r\n            }\r\n            return () => clearInterval(interval);\r\n        } \r\n    }, [id, index, red, green, blue, incCounter, decCounter, stopCount, colors, getMiniPlaneColors]);\r\n\r\n    return (\r\n        <span \r\n            className='miniplane'\r\n            style={{backgroundColor: `rgba(${used ? red : 255}, ${green}, ${blue}, ${opacity})`}} \r\n        ></span>\r\n    );\r\n}\r\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,eAAe,SAASC,OAAT,OAA+F;EAAA;;EAAA,IAA9E;IAAEC,EAAF;IAAMC,KAAN;IAAaC,UAAb;IAAyBC,UAAzB;IAAqCC,SAArC;IAAgDC,MAAhD;IAAwDC;EAAxD,CAA8E;EAC1G,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,CAAD,CAA9B;EACA,MAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,GAAD,CAAlC;EACA,MAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,GAAD,CAAhC;EACA,MAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,IAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACZ,IAAIE,EAAE,KAAKC,KAAX,EAAkB;MACd,IAAIgB,QAAJ;;MACA,IAAI,CAACb,SAAL,EAAgB;QACZI,OAAO,CAAC,IAAD,CAAP;QACAM,OAAO,CAAC,CAAD,CAAP;QACAE,UAAU,CAAC,CAAD,CAAV;QACAC,QAAQ,GAAGC,WAAW,CAAC,MAAM;UACzB,IAAIT,GAAG,KAAK,GAAZ,EAAkB;YACdU,aAAa,CAACF,QAAD,CAAb;UACH,CAFD,MAEO;YACHL,QAAQ,CAAEQ,CAAD,IAAOlB,UAAU,GAAGkB,CAAC,GAAG,EAAP,GAAYA,CAAC,GAAG,CAAlC,CAAR;YACAV,MAAM,CAAEW,CAAD,IAAOnB,UAAU,GAAGmB,CAAC,GAAG,EAAP,GAAYA,CAAC,GAAG,CAAlC,CAAN;YACAlB,UAAU;UACb;QACJ,CARqB,EAQnB,GARmB,CAAtB;MASH;;MACD,IAAIE,MAAJ,EAAY;QACRC,kBAAkB,CAAC,CAACG,GAAD,EAAME,KAAN,EAAaE,IAAb,CAAD,CAAlB;MACH;;MACD,OAAO,MAAMM,aAAa,CAACF,QAAD,CAA1B;IACH;EACJ,CAtBQ,EAsBN,CAACjB,EAAD,EAAKC,KAAL,EAAYQ,GAAZ,EAAiBE,KAAjB,EAAwBE,IAAxB,EAA8BX,UAA9B,EAA0CC,UAA1C,EAAsDC,SAAtD,EAAiEC,MAAjE,EAAyEC,kBAAzE,CAtBM,CAAT;EAwBA,oBACI;IACI,SAAS,EAAC,WADd;IAEI,KAAK,EAAE;MAACgB,eAAe,EAAG,QAAOf,IAAI,GAAGE,GAAH,GAAS,GAAI,KAAIE,KAAM,KAAIE,IAAK,KAAIE,OAAQ;IAA1E;EAFX;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;GArCuBhB,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}