{"ast":null,"code":"import _slicedToArray from\"D:/Coding/spot_the_plane/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import styles from'../styles/AnswerButton.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";export default function AnswerButton(_ref){var id=_ref.id,answer=_ref.answer,index=_ref.index,disabled=_ref.disabled,checkAnswer=_ref.checkAnswer,animation=_ref.animation;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var checkGuess=function checkGuess(e){if(e===answer[1]){setStatus(styles.correct);}else{setStatus(styles.wrong);}};useEffect(function(){setStatus('');},[index]);return/*#__PURE__*/_jsx(\"button\",{className:\"\".concat(styles.answerbutton,\" animate__animated \").concat(animation,\" animate__faster \").concat(status),value:id,disabled:disabled,onClick:function onClick(e){checkAnswer(e);checkGuess(e.target.value);},children:id},id);}","map":{"version":3,"names":["useState","useEffect","styles","AnswerButton","id","answer","index","disabled","checkAnswer","animation","status","setStatus","checkGuess","e","correct","wrong","answerbutton","target","value"],"sources":["D:/Coding/spot_the_plane/src/components/AnswerButton.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport styles from '../styles/AnswerButton.module.css';\r\n\r\nexport default function AnswerButton({ id, answer, index, disabled, checkAnswer, animation }) {\r\n    const [status, setStatus] = useState('');\r\n\r\n    const checkGuess = (e) => {\r\n        if (e === answer[1]) {\r\n            setStatus(styles.correct);\r\n        } else {\r\n            setStatus(styles.wrong);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus('');\r\n    }, [index]);\r\n\r\n    return (\r\n        <button \r\n            className={`${styles.answerbutton} animate__animated ${animation} animate__faster ${status}`} \r\n            key={id} \r\n            value={id} \r\n            disabled={disabled} \r\n            onClick={(e) => {checkAnswer(e); checkGuess(e.target.value)}}\r\n        > \r\n            {id} \r\n        </button>\r\n    );\r\n}\r\n"],"mappings":"8GAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,OAAP,KAAmB,mCAAnB,C,2CAEA,cAAe,SAASC,aAAT,MAA+E,IAAvDC,GAAuD,MAAvDA,EAAuD,CAAnDC,MAAmD,MAAnDA,MAAmD,CAA3CC,KAA2C,MAA3CA,KAA2C,CAApCC,QAAoC,MAApCA,QAAoC,CAA1BC,WAA0B,MAA1BA,WAA0B,CAAbC,SAAa,MAAbA,SAAa,CAC1F,cAA4BT,QAAQ,CAAC,EAAD,CAApC,wCAAOU,MAAP,eAAeC,SAAf,eAEA,GAAMC,WAAU,CAAG,QAAbA,WAAa,CAACC,CAAD,CAAO,CACtB,GAAIA,CAAC,GAAKR,MAAM,CAAC,CAAD,CAAhB,CAAqB,CACjBM,SAAS,CAACT,MAAM,CAACY,OAAR,CAAT,CACH,CAFD,IAEO,CACHH,SAAS,CAACT,MAAM,CAACa,KAAR,CAAT,CACH,CACJ,CAND,CAQAd,SAAS,CAAC,UAAM,CACZU,SAAS,CAAC,EAAD,CAAT,CACH,CAFQ,CAEN,CAACL,KAAD,CAFM,CAAT,CAIA,mBACI,eACI,SAAS,WAAKJ,MAAM,CAACc,YAAZ,+BAA8CP,SAA9C,6BAA2EC,MAA3E,CADb,CAGI,KAAK,CAAEN,EAHX,CAII,QAAQ,CAAEG,QAJd,CAKI,OAAO,CAAE,iBAACM,CAAD,CAAO,CAACL,WAAW,CAACK,CAAD,CAAX,CAAgBD,UAAU,CAACC,CAAC,CAACI,MAAF,CAASC,KAAV,CAAV,CAA2B,CALhE,UAOKd,EAPL,EAESA,EAFT,CADJ,CAWH"},"metadata":{},"sourceType":"module"}