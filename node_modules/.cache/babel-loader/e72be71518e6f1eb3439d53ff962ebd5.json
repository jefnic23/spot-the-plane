{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\spot_the_plane\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Timer from \"./Timer\";\nimport Counter from './Counter';\nimport Plane from './Plane';\nimport AnswerButton from './AnswerButton';\nimport styles from '../styles/Game.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction findAnswer(q) {\n  return q[0];\n}\n\nexport default function Game(_ref) {\n  _s();\n\n  let {\n    data,\n    endGame,\n    animation,\n    gameState,\n    statistics\n  } = _ref;\n  const [status, setStatus] = useState(true);\n  const [addTime, setAddTime] = useState(false);\n  const [colors, getColors] = useState(false);\n  const [minicolors, setMinicolors] = useState([]);\n  const [animate, setAnimate] = useState(false);\n  const [incCounter, setIncCounter] = useState(false);\n  const [stopCount, setStopCount] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [compAnimation, setAnimation] = useState(animation);\n  const [planeAnimation, setPlaneAnimation] = useState();\n  const [buttonAnimation, setButtonAnimation] = useState();\n  const answer = data[index].filter(findAnswer)[0];\n\n  const subTime = () => {\n    setAddTime(false);\n  };\n\n  const unanimate = () => {\n    setAnimate(false);\n  };\n\n  const decCounter = () => {\n    setIncCounter(false);\n  };\n\n  const getMiniPlaneColors = rgb => {\n    setMinicolors(prev => [...prev, rgb]);\n    setDisabled(true);\n    setStopCount(true);\n\n    if (index === data.length - 1) {\n      setStatus(false);\n      setTimeout(() => {\n        setAnimation('animate__fadeOut');\n      }, 1000);\n    } else {\n      setTimeout(() => {\n        setButtonAnimation('animate__flipOutX');\n      }, 1000);\n      setTimeout(() => {\n        setPlaneAnimation('animate__backOutRight');\n      }, 1500);\n      setTimeout(() => {\n        setPlaneAnimation('animate__backInLeft');\n        setButtonAnimation('animate__flipInX');\n        setIndex(i => i + 1);\n        setDisabled(false);\n        setStopCount(false);\n      }, 2000);\n    }\n\n    getColors(false);\n  };\n\n  const getTime = t => {\n    setTimeout(() => {\n      endGame(t, minicolors);\n    }, 1500);\n  };\n\n  const checkAnswer = e => {\n    let answer = data[index].filter(findAnswer)[0];\n\n    if (e.target.value === answer[1]) {\n      getColors(true);\n    } else {\n      e.target.disabled = true;\n      setAddTime(true);\n      setIncCounter(true);\n\n      if (!animate) {\n        setAnimate(true);\n      } else {\n        setAnimate(false);\n        setTimeout(() => {\n          setAnimate(true);\n        }, 10);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `animate__animated ${compAnimation} animate__faster`,\n    children: [/*#__PURE__*/_jsxDEV(Timer, {\n      status: status,\n      addTime: addTime,\n      subTime: subTime,\n      animate: animate,\n      unanimate: unanimate,\n      getTime: getTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.miniplane_container,\n      children: data && data.map((d, i) => /*#__PURE__*/_jsxDEV(Counter, {\n        id: i,\n        index: index,\n        incCounter: incCounter,\n        decCounter: decCounter,\n        stopCount: stopCount,\n        colors: colors,\n        getMiniPlaneColors: getMiniPlaneColors\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), data && /*#__PURE__*/_jsxDEV(Plane, {\n      data: answer[2],\n      animation: planeAnimation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.answers,\n      children: data && data[index].map((d, i) => /*#__PURE__*/_jsxDEV(AnswerButton, {\n        id: d[1],\n        answer: answer,\n        index: index,\n        disabled: disabled,\n        checkAnswer: checkAnswer,\n        animation: buttonAnimation\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"uM+C2jK8NIsOhrBbzPYmJrnj/Rs=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","Timer","Counter","Plane","AnswerButton","styles","findAnswer","q","Game","data","endGame","animation","gameState","statistics","status","setStatus","addTime","setAddTime","colors","getColors","minicolors","setMinicolors","animate","setAnimate","incCounter","setIncCounter","stopCount","setStopCount","disabled","setDisabled","index","setIndex","compAnimation","setAnimation","planeAnimation","setPlaneAnimation","buttonAnimation","setButtonAnimation","answer","filter","subTime","unanimate","decCounter","getMiniPlaneColors","rgb","prev","length","setTimeout","i","getTime","t","checkAnswer","e","target","value","miniplane_container","map","d","answers"],"sources":["D:/Coding/spot_the_plane/src/components/Game.js"],"sourcesContent":["import { useState } from 'react';\r\nimport Timer from \"./Timer\";\r\nimport Counter from './Counter';\r\nimport Plane from './Plane';\r\nimport AnswerButton from './AnswerButton';\r\nimport styles from '../styles/Game.module.css';\r\n\r\nfunction findAnswer(q) {\r\n    return q[0];\r\n}\r\n\r\nexport default function Game({ data, endGame, animation, gameState, statistics }) {\r\n    const [status, setStatus] = useState(true);\r\n    const [addTime, setAddTime] = useState(false);\r\n    const [colors, getColors] = useState(false);\r\n    const [minicolors, setMinicolors] = useState([]);\r\n    const [animate, setAnimate] = useState(false);\r\n    const [incCounter, setIncCounter] = useState(false);\r\n    const [stopCount, setStopCount] = useState(false);\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [index, setIndex] = useState(0);\r\n    const [compAnimation, setAnimation] = useState(animation);\r\n    const [planeAnimation, setPlaneAnimation] = useState();\r\n    const [buttonAnimation, setButtonAnimation] = useState();\r\n    const answer = data[index].filter(findAnswer)[0];\r\n\r\n    const subTime = () => {\r\n        setAddTime(false);\r\n    }\r\n\r\n    const unanimate = () => {\r\n        setAnimate(false);\r\n    }\r\n\r\n    const decCounter = () => {\r\n        setIncCounter(false);\r\n    }\r\n\r\n    const getMiniPlaneColors = (rgb) => {\r\n        setMinicolors(prev => [...prev, rgb]);\r\n        setDisabled(true);\r\n        setStopCount(true);\r\n        if (index === data.length - 1) {\r\n            setStatus(false);\r\n            setTimeout(() => {\r\n                setAnimation('animate__fadeOut');\r\n            }, 1000);\r\n        } else {\r\n            setTimeout(() => {\r\n                setButtonAnimation('animate__flipOutX');\r\n            }, 1000);\r\n            setTimeout(() => {\r\n                setPlaneAnimation('animate__backOutRight');\r\n            }, 1500);\r\n            setTimeout(() => {\r\n                setPlaneAnimation('animate__backInLeft');\r\n                setButtonAnimation('animate__flipInX');\r\n                setIndex(i => i + 1);\r\n                setDisabled(false);\r\n                setStopCount(false);\r\n            }, 2000);\r\n        }\r\n        getColors(false);\r\n    }\r\n\r\n    const getTime = (t) => {\r\n        setTimeout(() => {\r\n            endGame(t, minicolors);\r\n        }, 1500);\r\n    }\r\n\r\n    const checkAnswer = (e) => {\r\n        let answer = data[index].filter(findAnswer)[0];\r\n        if (e.target.value === answer[1]) {\r\n            getColors(true);\r\n        } else {\r\n            e.target.disabled = true;\r\n            setAddTime(true);\r\n            setIncCounter(true);\r\n            if (!animate) {\r\n                setAnimate(true);\r\n            } else {\r\n                setAnimate(false);\r\n                setTimeout(() => {\r\n                    setAnimate(true);\r\n                }, 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`animate__animated ${compAnimation} animate__faster`}>\r\n            <Timer status={status} addTime={addTime} subTime={subTime} animate={animate} unanimate={unanimate} getTime={getTime} />\r\n            <div className={styles.miniplane_container}>\r\n                {data && \r\n                    data.map((d, i) =>\r\n                        <Counter key={i} id={i} index={index} incCounter={incCounter} decCounter={decCounter} stopCount={stopCount} colors={colors} getMiniPlaneColors={getMiniPlaneColors} />\r\n                    )\r\n                }\r\n            </div>\r\n            {data && <Plane data={answer[2]} animation={planeAnimation} />}\r\n            <div className={styles.answers}>\r\n                {data && \r\n                    data[index].map((d, i) =>\r\n                        <AnswerButton key={i} id={d[1]} answer={answer} index={index} disabled={disabled} checkAnswer={checkAnswer} animation={buttonAnimation} />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}