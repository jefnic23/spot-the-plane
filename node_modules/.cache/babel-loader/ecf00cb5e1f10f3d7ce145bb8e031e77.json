{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\spot_the_plane\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Plane from './Plane';\nimport Answers from './Answers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction compDay() {\n  let today = new Date();\n  let yyyy = today.getFullYear();\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let dd = String(today.getDate()).padStart(2, '0');\n  return parseInt(`${yyyy}${mm}${dd}`);\n}\n\nfunction findAnswer(a) {\n  return a[0];\n}\n\nexport default function Game() {\n  _s();\n\n  const [data, setData] = useState();\n  const [index, setIndex] = useState(0);\n  const [right, setRight] = useState(false);\n  const [wrong, setWrong] = useState(false);\n  useEffect(() => {\n    fetch(\"/api/game\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        seed: compDay()\n      })\n    }).then(res => res.json()).then(data => setData(data));\n  }, []);\n\n  const createCounters = () => {\n    const counters = [];\n\n    for (let i = 0; i < 10; i++) {\n      counters.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"miniplane\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this));\n    }\n\n    return counters;\n  };\n\n  const checkAnswer = e => {\n    let answer = data.data[index].filter(findAnswer)[0];\n\n    if (e.target.value === answer[1]) {\n      setIndex(index + 1);\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"game\",\n    className: \"animate__animated animate__faster\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"counter\",\n      className: \"miniplane-container\",\n      children: createCounters()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: data && /*#__PURE__*/_jsxDEV(Plane, {\n        data: data.data[index].filter(findAnswer)[0][2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"answers\",\n      children: data && /*#__PURE__*/_jsxDEV(Answers, {\n        data: data.data[index],\n        checkAnswer: checkAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"CxpPeAZBbVkEgKl2ydiBVG6p5cU=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useEffect","Plane","Answers","compDay","today","Date","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","parseInt","findAnswer","a","Game","data","setData","index","setIndex","right","setRight","wrong","setWrong","fetch","method","headers","body","JSON","stringify","seed","then","res","json","createCounters","counters","i","push","checkAnswer","e","answer","filter","target","value"],"sources":["D:/Coding/spot_the_plane/src/components/Game.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Plane from './Plane';\r\nimport Answers from './Answers';\r\n\r\nfunction compDay() {\r\n    let today = new Date();\r\n    let yyyy = today.getFullYear();\r\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    let dd = String(today.getDate()).padStart(2, '0');\r\n    return parseInt(`${yyyy}${mm}${dd}`);\r\n}\r\n\r\nfunction findAnswer(a) {\r\n    return a[0];\r\n}\r\n\r\nexport default function Game() {\r\n    const [data, setData] = useState();\r\n    const [index, setIndex] = useState(0);\r\n    const [right, setRight] = useState(false);\r\n    const [wrong, setWrong] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      fetch(\"/api/game\", {\r\n        method: \"POST\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ seed: compDay() })\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => setData(data))\r\n    }, []);\r\n\r\n    const createCounters = () => {\r\n        const counters = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            counters.push(<span className=\"miniplane\" key={i}></span>);\r\n        }\r\n        return counters;\r\n    }\r\n\r\n    const checkAnswer = (e) => {\r\n        let answer = data.data[index].filter(findAnswer)[0];\r\n        if (e.target.value === answer[1]) {\r\n            setIndex(index + 1);\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"game\" className=\"animate__animated animate__faster\">\r\n            <div id=\"timer\"></div>\r\n            <div id=\"counter\" className=\"miniplane-container\">\r\n                {createCounters()}\r\n            </div>\r\n            <div className=\"img-container\">\r\n                {data && <Plane data={data.data[index].filter(findAnswer)[0][2]} />}\r\n            </div>\r\n            <div id=\"answers\">\r\n                {data && <Answers data={data.data[index]} checkAnswer={checkAnswer} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}