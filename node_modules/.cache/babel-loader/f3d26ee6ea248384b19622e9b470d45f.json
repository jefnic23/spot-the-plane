{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\spot_the_plane\\\\src\\\\pages\\\\MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Loader from \"../components/Loader\";\nimport Navbar from \"../components/Navbar\";\nimport Game from \"../components/Game\";\nimport Pregame from '../components/Pregame';\nimport Postgame from '../components/Postgame';\nimport Info from '../components/Info';\nimport Stats from '../components/Stats';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction compDay() {\n  let today = new Date();\n  let yyyy = today.getFullYear();\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let dd = String(today.getDate()).padStart(2, '0');\n  return parseInt(`${yyyy}${mm}${dd}`);\n}\n\nfunction getTimeFromMs(t) {\n  let mm = parseInt(t / (1000 * 60) % 60);\n  let ss = parseInt(t / 1000 % 60);\n  let ms = parseInt(t % 1000 / 10);\n  let leadZeroTime = [mm, ss, ms].map(time => time < 10 ? `0${time}` : time);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [leadZeroTime[0], \":\", leadZeroTime[1], \".\", leadZeroTime[2]]\n  }, void 0, true);\n}\n\nconst notify = msg => toast(msg);\n\nexport default function MainPage() {\n  _s();\n\n  const [gameState, setGameState] = useState();\n  const [statistics, setStatistics] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [animation, setAnimation] = useState('animate__fadeIn');\n  const [menuAnimation, setMenuAnimation] = useState();\n  const [info, setInfo] = useState(false);\n  const [stats, setStats] = useState(false);\n  const [begun, setBegun] = useState(false);\n  const [done, setDone] = useState(false);\n  const [day, setDay] = useState();\n  const [data, setData] = useState();\n  const [completionTime, setTime] = useState(0);\n  const [rgb, setRGB] = useState();\n  useEffect(() => {\n    let st = localStorage.getItem('statistics') ? setStatistics(JSON.parse(localStorage.getItem('statistics'))) : setStatistics({\n      'daysPlayed': 0,\n      'totalGameTime': 0,\n      'avgCompletionTime': 0,\n      'avgTimePerQuestion': 0,\n      'lastPlayed': 'Never'\n    });\n    let gs = localStorage.getItem('gameState') ? setGameState(JSON.parse(localStorage.getItem('gameState'))) : {\n      'completionTime': '',\n      'answers': [],\n      'status': 'in_progress'\n    };\n\n    if (gs.status === 'in_progress' || compDay() > st.lastPlayed) {\n      setGameState(gs);\n      fetch(\"/api/game\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          seed: compDay()\n        })\n      }).then(res => res.json()).then(data => {\n        setDay(data.day);\n        setData(data.data);\n        setLoaded(true);\n      });\n    } else {\n      setLoaded(true);\n      setDone(true);\n    }\n  }, []);\n\n  const startGame = () => {\n    setAnimation('animate__fadeOut');\n    setTimeout(() => {\n      setAnimation('animate__fadeIn');\n      setBegun(true);\n    }, 500);\n  };\n\n  const updateGameState = t => {\n    setGameState(gs => {\n      gs.completionTime = t;\n      gs.status = 'complete';\n    });\n    localStorage.setItem('game_state', JSON.stringify(gameState));\n  };\n\n  const updateStatistics = t => {\n    setStatistics(st => {\n      st.daysPlayed += 1;\n      st.totalGameTime += t;\n      st.avgCompletionTime = getTimeFromMs(st.totalGameTime / st.daysPlayed);\n      st.avgTimePerQuestion = getTimeFromMs(st.avgCompletionTime / 10);\n      st.lastPlayed = day;\n    });\n    localStorage.setItem('statistics', JSON.stringify(statistics));\n  };\n\n  const endGame = (t, rgb) => {\n    updateGameState(t);\n    updateStatistics(t);\n    setTime(getTimeFromMs(t));\n    setRGB(rgb);\n    setDone(true);\n  };\n\n  const openMenu = m => {\n    setMenuAnimation('animate__fadeInUpBig');\n    m === 'info' ? setInfo(true) : setStats(true);\n  };\n\n  const closeMenu = m => {\n    setMenuAnimation('animate__fadeOutDownBig');\n    setTimeout(() => {\n      m === 'info' ? setInfo(false) : setStats(false);\n    }, 500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      openMenu: openMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), info && /*#__PURE__*/_jsxDEV(Info, {\n      animation: menuAnimation,\n      closeMenu: closeMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 22\n    }, this), stats && /*#__PURE__*/_jsxDEV(Stats, {\n      animation: menuAnimation,\n      closeMenu: closeMenu,\n      statistics: statistics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 23\n    }, this), loaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!begun && /*#__PURE__*/_jsxDEV(Pregame, {\n        startGame: startGame,\n        animation: animation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 32\n      }, this), begun && !done && /*#__PURE__*/_jsxDEV(Game, {\n        data: data,\n        endGame: endGame,\n        animation: animation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 40\n      }, this), done && /*#__PURE__*/_jsxDEV(Postgame, {\n        completionTime: completionTime,\n        rgb: rgb,\n        day: day,\n        notify: notify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MainPage, \"yFFCcG7XOEYx7Di8TxGoXO5nVxQ=\");\n\n_c = MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","toast","Toaster","Loader","Navbar","Game","Pregame","Postgame","Info","Stats","compDay","today","Date","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","parseInt","getTimeFromMs","t","ss","ms","leadZeroTime","map","time","notify","msg","MainPage","gameState","setGameState","statistics","setStatistics","loaded","setLoaded","animation","setAnimation","menuAnimation","setMenuAnimation","info","setInfo","stats","setStats","begun","setBegun","done","setDone","day","setDay","data","setData","completionTime","setTime","rgb","setRGB","st","localStorage","getItem","JSON","parse","gs","status","lastPlayed","fetch","method","headers","body","stringify","seed","then","res","json","startGame","setTimeout","updateGameState","setItem","updateStatistics","daysPlayed","totalGameTime","avgCompletionTime","avgTimePerQuestion","endGame","openMenu","m","closeMenu"],"sources":["D:/Coding/spot_the_plane/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport Loader from \"../components/Loader\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Game from \"../components/Game\";\r\nimport Pregame from '../components/Pregame';\r\nimport Postgame from '../components/Postgame';\r\nimport Info from '../components/Info';\r\nimport Stats from '../components/Stats';\r\n\r\nfunction compDay() {\r\n    let today = new Date();\r\n    let yyyy = today.getFullYear();\r\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    let dd = String(today.getDate()).padStart(2, '0');\r\n    return parseInt(`${yyyy}${mm}${dd}`);\r\n}\r\n\r\nfunction getTimeFromMs(t) {\r\n    let mm = parseInt((t / (1000 * 60)) % 60);\r\n    let ss = parseInt((t / 1000) % 60);\r\n    let ms = parseInt((t % 1000) / 10);\r\n    let leadZeroTime = [mm, ss, ms].map(time => time < 10 ? `0${time}` : time);\r\n    return <>{leadZeroTime[0]}:{leadZeroTime[1]}.{leadZeroTime[2]}</>;\r\n}\r\n\r\nconst notify = (msg) => toast(msg);\r\n\r\nexport default function MainPage() {\r\n    const [gameState, setGameState] = useState();\r\n    const [statistics, setStatistics] = useState();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [animation, setAnimation] = useState('animate__fadeIn');\r\n    const [menuAnimation, setMenuAnimation] = useState();\r\n    const [info, setInfo] = useState(false);\r\n    const [stats, setStats] = useState(false);\r\n    const [begun, setBegun] = useState(false);\r\n    const [done, setDone] = useState(false);\r\n    const [day, setDay] = useState();\r\n    const [data, setData] = useState();\r\n    const [completionTime, setTime] = useState(0);\r\n    const [rgb, setRGB] = useState();\r\n\r\n    useEffect(() => {\r\n        let st = localStorage.getItem('statistics') ? \r\n            setStatistics(JSON.parse(localStorage.getItem('statistics'))) : \r\n            setStatistics({'daysPlayed': 0, 'totalGameTime': 0, 'avgCompletionTime': 0, 'avgTimePerQuestion': 0, 'lastPlayed': 'Never'})\r\n        ;\r\n        let gs = localStorage.getItem('gameState') ?\r\n            setGameState(JSON.parse(localStorage.getItem('gameState'))) :\r\n            {'completionTime': '', 'answers': [], 'status': 'in_progress'}\r\n        ;\r\n\r\n        if (gs.status === 'in_progress' || compDay() > st.lastPlayed) {\r\n            setGameState(gs);\r\n            fetch(\"/api/game\", {\r\n                method: \"POST\",\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ seed: compDay() })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setDay(data.day);\r\n                setData(data.data);\r\n                setLoaded(true);\r\n            });\r\n        } else {\r\n            setLoaded(true);\r\n            setDone(true);\r\n        }\r\n    }, []);\r\n\r\n    const startGame = () => {\r\n        setAnimation('animate__fadeOut');\r\n        setTimeout(() => {\r\n            setAnimation('animate__fadeIn');\r\n            setBegun(true);\r\n        }, 500);\r\n    }\r\n\r\n    const updateGameState = (t) => {\r\n        setGameState((gs) => {gs.completionTime = t; gs.status = 'complete'});\r\n        localStorage.setItem('game_state', JSON.stringify(gameState));\r\n    }\r\n\r\n    const updateStatistics = (t) => {\r\n        setStatistics((st) => {\r\n            st.daysPlayed += 1;\r\n            st.totalGameTime += t;\r\n            st.avgCompletionTime = getTimeFromMs(st.totalGameTime / st.daysPlayed);\r\n            st.avgTimePerQuestion = getTimeFromMs(st.avgCompletionTime / 10);\r\n            st.lastPlayed = day;\r\n        });\r\n        localStorage.setItem('statistics', JSON.stringify(statistics));\r\n    }\r\n\r\n    const endGame = (t, rgb) => {\r\n        updateGameState(t);\r\n        updateStatistics(t);\r\n        setTime(getTimeFromMs(t));\r\n        setRGB(rgb);\r\n        setDone(true);\r\n    }\r\n\r\n    const openMenu = (m) => {\r\n        setMenuAnimation('animate__fadeInUpBig');\r\n        m === 'info' ? setInfo(true) : setStats(true);\r\n    }\r\n\r\n    const closeMenu = (m) => {\r\n        setMenuAnimation('animate__fadeOutDownBig');\r\n        setTimeout(() => {\r\n            m === 'info' ? setInfo(false) : setStats(false);\r\n        }, 500);\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <Navbar openMenu={openMenu} />\r\n            {info && <Info animation={menuAnimation} closeMenu={closeMenu} />}\r\n            {stats && <Stats animation={menuAnimation} closeMenu={closeMenu} statistics={statistics} />}\r\n            {loaded ? \r\n                <>\r\n                    {!begun && <Pregame startGame={startGame} animation={animation} />}\r\n                    {begun && !done && <Game data={data} endGame={endGame} animation={animation} />}\r\n                    {done && <Postgame completionTime={completionTime} rgb={rgb} day={day} notify={notify} />}\r\n                </>\r\n            :\r\n                <Loader />\r\n            }\r\n            <Toaster />\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,iBAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;;AAEA,SAASC,OAAT,GAAmB;EACf,IAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;EACA,IAAIC,IAAI,GAAGF,KAAK,CAACG,WAAN,EAAX;EACA,IAAIC,EAAE,GAAGC,MAAM,CAACL,KAAK,CAACM,QAAN,KAAmB,CAApB,CAAN,CAA6BC,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAT;EACA,IAAIC,EAAE,GAAGH,MAAM,CAACL,KAAK,CAACS,OAAN,EAAD,CAAN,CAAwBF,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAT;EACA,OAAOG,QAAQ,CAAE,GAAER,IAAK,GAAEE,EAAG,GAAEI,EAAG,EAAnB,CAAf;AACH;;AAED,SAASG,aAAT,CAAuBC,CAAvB,EAA0B;EACtB,IAAIR,EAAE,GAAGM,QAAQ,CAAEE,CAAC,IAAI,OAAO,EAAX,CAAF,GAAoB,EAArB,CAAjB;EACA,IAAIC,EAAE,GAAGH,QAAQ,CAAEE,CAAC,GAAG,IAAL,GAAa,EAAd,CAAjB;EACA,IAAIE,EAAE,GAAGJ,QAAQ,CAAEE,CAAC,GAAG,IAAL,GAAa,EAAd,CAAjB;EACA,IAAIG,YAAY,GAAG,CAACX,EAAD,EAAKS,EAAL,EAASC,EAAT,EAAaE,GAAb,CAAiBC,IAAI,IAAIA,IAAI,GAAG,EAAP,GAAa,IAAGA,IAAK,EAArB,GAAyBA,IAAlD,CAAnB;EACA,oBAAO;IAAA,WAAGF,YAAY,CAAC,CAAD,CAAf,OAAqBA,YAAY,CAAC,CAAD,CAAjC,OAAuCA,YAAY,CAAC,CAAD,CAAnD;EAAA,gBAAP;AACH;;AAED,MAAMG,MAAM,GAAIC,GAAD,IAAS7B,KAAK,CAAC6B,GAAD,CAA7B;;AAEA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EAC/B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlC,QAAQ,EAA1C;EACA,MAAM,CAACmC,UAAD,EAAaC,aAAb,IAA8BpC,QAAQ,EAA5C;EACA,MAAM,CAACqC,MAAD,EAASC,SAAT,IAAsBtC,QAAQ,CAAC,KAAD,CAApC;EACA,MAAM,CAACuC,SAAD,EAAYC,YAAZ,IAA4BxC,QAAQ,CAAC,iBAAD,CAA1C;EACA,MAAM,CAACyC,aAAD,EAAgBC,gBAAhB,IAAoC1C,QAAQ,EAAlD;EACA,MAAM,CAAC2C,IAAD,EAAOC,OAAP,IAAkB5C,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAAC6C,KAAD,EAAQC,QAAR,IAAoB9C,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAAC+C,KAAD,EAAQC,QAAR,IAAoBhD,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACiD,IAAD,EAAOC,OAAP,IAAkBlD,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACmD,GAAD,EAAMC,MAAN,IAAgBpD,QAAQ,EAA9B;EACA,MAAM,CAACqD,IAAD,EAAOC,OAAP,IAAkBtD,QAAQ,EAAhC;EACA,MAAM,CAACuD,cAAD,EAAiBC,OAAjB,IAA4BxD,QAAQ,CAAC,CAAD,CAA1C;EACA,MAAM,CAACyD,GAAD,EAAMC,MAAN,IAAgB1D,QAAQ,EAA9B;EAEAC,SAAS,CAAC,MAAM;IACZ,IAAI0D,EAAE,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IACLzB,aAAa,CAAC0B,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAD,CADR,GAELzB,aAAa,CAAC;MAAC,cAAc,CAAf;MAAkB,iBAAiB,CAAnC;MAAsC,qBAAqB,CAA3D;MAA8D,sBAAsB,CAApF;MAAuF,cAAc;IAArG,CAAD,CAFjB;IAIA,IAAI4B,EAAE,GAAGJ,YAAY,CAACC,OAAb,CAAqB,WAArB,IACL3B,YAAY,CAAC4B,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAD,CADP,GAEL;MAAC,kBAAkB,EAAnB;MAAuB,WAAW,EAAlC;MAAsC,UAAU;IAAhD,CAFJ;;IAKA,IAAIG,EAAE,CAACC,MAAH,KAAc,aAAd,IAA+BtD,OAAO,KAAKgD,EAAE,CAACO,UAAlD,EAA8D;MAC1DhC,YAAY,CAAC8B,EAAD,CAAZ;MACAG,KAAK,CAAC,WAAD,EAAc;QACfC,MAAM,EAAE,MADO;QAEfC,OAAO,EAAE;UAAE,gBAAgB;QAAlB,CAFM;QAGfC,IAAI,EAAER,IAAI,CAACS,SAAL,CAAe;UAAEC,IAAI,EAAE7D,OAAO;QAAf,CAAf;MAHS,CAAd,CAAL,CAKC8D,IALD,CAKMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALb,EAMCF,IAND,CAMMpB,IAAI,IAAI;QACVD,MAAM,CAACC,IAAI,CAACF,GAAN,CAAN;QACAG,OAAO,CAACD,IAAI,CAACA,IAAN,CAAP;QACAf,SAAS,CAAC,IAAD,CAAT;MACH,CAVD;IAWH,CAbD,MAaO;MACHA,SAAS,CAAC,IAAD,CAAT;MACAY,OAAO,CAAC,IAAD,CAAP;IACH;EACJ,CA3BQ,EA2BN,EA3BM,CAAT;;EA6BA,MAAM0B,SAAS,GAAG,MAAM;IACpBpC,YAAY,CAAC,kBAAD,CAAZ;IACAqC,UAAU,CAAC,MAAM;MACbrC,YAAY,CAAC,iBAAD,CAAZ;MACAQ,QAAQ,CAAC,IAAD,CAAR;IACH,CAHS,EAGP,GAHO,CAAV;EAIH,CAND;;EAQA,MAAM8B,eAAe,GAAItD,CAAD,IAAO;IAC3BU,YAAY,CAAE8B,EAAD,IAAQ;MAACA,EAAE,CAACT,cAAH,GAAoB/B,CAApB;MAAuBwC,EAAE,CAACC,MAAH,GAAY,UAAZ;IAAuB,CAAxD,CAAZ;IACAL,YAAY,CAACmB,OAAb,CAAqB,YAArB,EAAmCjB,IAAI,CAACS,SAAL,CAAetC,SAAf,CAAnC;EACH,CAHD;;EAKA,MAAM+C,gBAAgB,GAAIxD,CAAD,IAAO;IAC5BY,aAAa,CAAEuB,EAAD,IAAQ;MAClBA,EAAE,CAACsB,UAAH,IAAiB,CAAjB;MACAtB,EAAE,CAACuB,aAAH,IAAoB1D,CAApB;MACAmC,EAAE,CAACwB,iBAAH,GAAuB5D,aAAa,CAACoC,EAAE,CAACuB,aAAH,GAAmBvB,EAAE,CAACsB,UAAvB,CAApC;MACAtB,EAAE,CAACyB,kBAAH,GAAwB7D,aAAa,CAACoC,EAAE,CAACwB,iBAAH,GAAuB,EAAxB,CAArC;MACAxB,EAAE,CAACO,UAAH,GAAgBf,GAAhB;IACH,CANY,CAAb;IAOAS,YAAY,CAACmB,OAAb,CAAqB,YAArB,EAAmCjB,IAAI,CAACS,SAAL,CAAepC,UAAf,CAAnC;EACH,CATD;;EAWA,MAAMkD,OAAO,GAAG,CAAC7D,CAAD,EAAIiC,GAAJ,KAAY;IACxBqB,eAAe,CAACtD,CAAD,CAAf;IACAwD,gBAAgB,CAACxD,CAAD,CAAhB;IACAgC,OAAO,CAACjC,aAAa,CAACC,CAAD,CAAd,CAAP;IACAkC,MAAM,CAACD,GAAD,CAAN;IACAP,OAAO,CAAC,IAAD,CAAP;EACH,CAND;;EAQA,MAAMoC,QAAQ,GAAIC,CAAD,IAAO;IACpB7C,gBAAgB,CAAC,sBAAD,CAAhB;IACA6C,CAAC,KAAK,MAAN,GAAe3C,OAAO,CAAC,IAAD,CAAtB,GAA+BE,QAAQ,CAAC,IAAD,CAAvC;EACH,CAHD;;EAKA,MAAM0C,SAAS,GAAID,CAAD,IAAO;IACrB7C,gBAAgB,CAAC,yBAAD,CAAhB;IACAmC,UAAU,CAAC,MAAM;MACbU,CAAC,KAAK,MAAN,GAAe3C,OAAO,CAAC,KAAD,CAAtB,GAAgCE,QAAQ,CAAC,KAAD,CAAxC;IACH,CAFS,EAEP,GAFO,CAAV;EAGH,CALD;;EAOA,oBACI;IAAA,wBACI,QAAC,MAAD;MAAQ,QAAQ,EAAEwC;IAAlB;MAAA;MAAA;MAAA;IAAA,QADJ,EAEK3C,IAAI,iBAAI,QAAC,IAAD;MAAM,SAAS,EAAEF,aAAjB;MAAgC,SAAS,EAAE+C;IAA3C;MAAA;MAAA;MAAA;IAAA,QAFb,EAGK3C,KAAK,iBAAI,QAAC,KAAD;MAAO,SAAS,EAAEJ,aAAlB;MAAiC,SAAS,EAAE+C,SAA5C;MAAuD,UAAU,EAAErD;IAAnE;MAAA;MAAA;MAAA;IAAA,QAHd,EAIKE,MAAM,gBACH;MAAA,WACK,CAACU,KAAD,iBAAU,QAAC,OAAD;QAAS,SAAS,EAAE6B,SAApB;QAA+B,SAAS,EAAErC;MAA1C;QAAA;QAAA;QAAA;MAAA,QADf,EAEKQ,KAAK,IAAI,CAACE,IAAV,iBAAkB,QAAC,IAAD;QAAM,IAAI,EAAEI,IAAZ;QAAkB,OAAO,EAAEgC,OAA3B;QAAoC,SAAS,EAAE9C;MAA/C;QAAA;QAAA;QAAA;MAAA,QAFvB,EAGKU,IAAI,iBAAI,QAAC,QAAD;QAAU,cAAc,EAAEM,cAA1B;QAA0C,GAAG,EAAEE,GAA/C;QAAoD,GAAG,EAAEN,GAAzD;QAA8D,MAAM,EAAErB;MAAtE;QAAA;QAAA;QAAA;MAAA,QAHb;IAAA,gBADG,gBAOH,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAXR,eAaI,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAbJ;EAAA,gBADJ;AAiBH;;GAzGuBE,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}